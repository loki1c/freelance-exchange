import React, { useState, useEffect } from "react";
import axios from "axios";
import { Link } from "react-router-dom";
import "bootstrap/dist/css/bootstrap.min.css";
import "./AllOrder.css";

const AllOrder = () => {
  const [orders, setOrders] = useState([]);
  const [filteredOrders, setFilteredOrders] = useState([]);
  const [loading, setLoading] = useState(true);
  const [categories, setCategories] = useState([]);
  const [selectedCategory, setSelectedCategory] = useState([]);
  const [viewCounts, setViewCounts] = useState({}); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –∫–∞–∂–¥–æ–≥–æ –∑–∞–∫–∞–∑–∞

  useEffect(() => {
    const fetchOrders = async () => {
  try {
    const response = await axios.get('http://127.0.0.1:8000/api/user/orders', {
      headers: {
        'Authorization': `Bearer ${localStorage.getItem('token')}`,
      },
    });

    // üî¥ –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –æ—Ç–∫—Ä—ã—Ç—ã–µ –∑–∞–∫–∞–∑—ã
    const openOrders = response.data.filter(order => order.status !== '–ó–∞–∫—Ä—ã—Ç');

    setOrders(openOrders);
    setFilteredOrders(openOrders);
    setLoading(false);

    // –ò–∑–≤–ª–µ–∫–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const uniqueCategories = [
      ...new Set(openOrders.map((order) => order.category).filter((category) => category))
    ];
    setCategories(uniqueCategories);

    // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Å–º–æ—Ç—Ä—ã —Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∑–∞–∫–∞–∑–æ–≤
    const viewCountPromises = openOrders.map(async (order) => {
      const viewCountResponse = await axios.get(`http://127.0.0.1:8000/api/user/profile/orders/${order.id}/view-count`, {
        headers: {
          'Authorization': `Bearer ${localStorage.getItem('token')}`,
        },
      });
      return { orderId: order.id, viewCount: viewCountResponse.data.view_count };
    });

    const viewCountsData = await Promise.all(viewCountPromises);
    const viewCountsObj = viewCountsData.reduce((acc, { orderId, viewCount }) => {
      acc[orderId] = viewCount;
      return acc;
    }, {});
    setViewCounts(viewCountsObj);
  } catch (error) {
    console.error("There was an error fetching the orders!", error);
    setLoading(false);
  }
};


    fetchOrders();
  }, []);

  const handleCategoryChange = (event) => {
    const category = event.target.value;
    setSelectedCategory(category);

    if (category === "") {
      setFilteredOrders(orders);  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∑–∞–∫–∞–∑—ã
    } else {
      setFilteredOrders(orders.filter((order) => order.category === category));  // –§–∏–ª—å—Ç—Ä—É–µ–º –∑–∞–∫–∞–∑—ã –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    }
  };

  if (loading) return <div className="text-white">–ó–∞–≥—Ä—É–∑–∫–∞...</div>;

  return (
    <div className="find-order-page">
      <div className="container py-5">
        <h2 className="section-title">–ù–∞–π—Ç–∏ –∑–∞–∫–∞–∑</h2>

        {/* –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º */}
        <div className="category-filter mb-4">
          <label htmlFor="category">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:</label>
          <select
            id="category"
            className="form-select"
            value={selectedCategory}
            onChange={handleCategoryChange}
          >
            <option value="">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
            {categories.map((category, index) => (
              <option key={index} value={category}>
                {category}
              </option>
            ))}
          </select>
        </div>

        {filteredOrders.length === 0 ? (
          <p className="text-white">–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤.</p>
        ) : (
          <div className="row g-4">
            {filteredOrders.map((order) => (
              <div className="col-md-4" key={order.id}>
                <div className="order-card">
                  <img
                    src={order.image || "URL_–î–õ–Ø_–ö–ê–†–¢–ò–ù–ö–ò_1"} // –¥–æ–±–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
                    alt={order.title}
                    className="order-image"
                  />
                  <div className="order-info">
                    <h5 className="order-title">{order.title}</h5>
                    {order.status === '–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ' && (
                      <p className="order-status in-progress">–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</p>
                    )}
                    <p className="order-description">{order.description}</p>
                    <p className="order-price">{order.price}</p>

                    {/* –ö–∞—Ç–µ–≥–æ—Ä–∏—è –∑–∞–∫–∞–∑–∞ */}
                    <p className="order-category">
                      <strong>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</strong> {order.category || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
                    </p>

                    {/* –î–µ–¥–ª–∞–π–Ω –∑–∞–∫–∞–∑–∞ */}
                    <p className="order-deadline">
                      <strong>–î–µ–¥–ª–∞–π–Ω:</strong> {order.deadline ? new Date(order.deadline).toLocaleDateString() : "–ù–µ —É–∫–∞–∑–∞–Ω"}
                    </p>

                    {/* –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ */}
                    <p className="order-view-count">
                      <strong>–ü—Ä–æ—Å–º–æ—Ç—Ä—ã:</strong> {viewCounts[order.id] || 0}
                    </p>

                    <Link
                      to={`/profile/orders/${order.id}`}
                      className="btn btn-primary"
                    >
                      –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                    </Link>
                  </div>
                </div>
              </div>
            ))}
          </div>
        )}
      </div>
    </div>
  );
};

export default AllOrder;
