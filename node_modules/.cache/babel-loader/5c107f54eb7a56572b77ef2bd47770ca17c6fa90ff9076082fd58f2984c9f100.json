{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tolik\\\\freelance-exchange\\\\src\\\\components\\\\pages\\\\Chat\\\\ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport \"./ChatWindow.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = ({\n  orderId,\n  onClose\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [recipientId, setRecipientId] = useState(null);\n  const [chatId, setChatId] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const token = localStorage.getItem(\"token\");\n  const messagesEndRef = useRef(null);\n\n  // Получение userId из токена при первом рендере\n  useEffect(() => {\n    if (token) {\n      const id = getUserIdFromToken(token);\n      setUserId(id);\n    }\n  }, [token]);\n\n  // Прокрутка вниз при добавлении нового сообщения\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  // Получение чата при изменении orderId, token или userId\n  useEffect(() => {\n    const fetchChat = async () => {\n      setLoading(true);\n      setError(\"\");\n      try {\n        const response = await axios.get(`http://127.0.0.1:8000/api/user/order/chat/${orderId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const chatData = response.data.chat;\n        setChatId(chatData.id);\n        const fetchedMessages = chatData.messages || [];\n        setMessages(fetchedMessages);\n\n        // Определяем recipientId (получателя)\n        if (userId && fetchedMessages.length > 0) {\n          const firstIncoming = fetchedMessages.find(msg => msg.sender_id !== userId);\n          if (firstIncoming) {\n            setRecipientId(firstIncoming.sender_id);\n          } else {\n            const fallback = fetchedMessages[0];\n            const recipient = fallback.sender_id === userId ? fallback.recipient_id : fallback.sender_id;\n            setRecipientId(recipient);\n          }\n        }\n      } catch (err) {\n        console.error(\"Ошибка при загрузке чата:\", err);\n        setError(\"Ошибка загрузки сообщений.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (orderId && token && userId) {\n      fetchChat();\n    }\n  }, [orderId, token, userId]);\n\n  // Автоматическая прокрутка вниз при изменении сообщений\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Отправка нового сообщения\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    try {\n      const response = await axios.post(`http://127.0.0.1:8000/api/user/order/chat/${orderId}/message`, {\n        content: newMessage,\n        recipient_id: recipientId // может быть null, сервер обработает\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const newMsg = response.data.message;\n\n      // Если recipientId не установлен, определяем его по новому сообщению\n      if (!recipientId && userId) {\n        const recipient = newMsg.sender_id === userId ? newMsg.recipient_id : newMsg.sender_id;\n        setRecipientId(recipient);\n      }\n      setMessages(prev => [...prev, newMsg]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.error(err);\n      setError(\"Ошибка при отправке сообщения.\");\n    }\n  };\n\n  // Декодирование токена для userId\n  function getUserIdFromToken(token) {\n    try {\n      const payload = JSON.parse(atob(token.split(\".\")[1]));\n      return payload.sub;\n    } catch (e) {\n      console.error(\"Ошибка при декодировании токена:\", e);\n      return null;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"\\u0427\\u0430\\u0442 \\u043F\\u043E \\u0437\\u0430\\u043A\\u0430\\u0437\\u0443 #\", orderId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-close\",\n        onClick: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-body\",\n      children: [loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [messages.length > 0 ? messages.map(msg => {\n          var _msg$sender;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.sender_id === userId ? \"message-sent\" : \"message-received\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [((_msg$sender = msg.sender) === null || _msg$sender === void 0 ? void 0 : _msg$sender.name) || `Пользователь #${msg.sender_id}`, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: msg.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this)]\n          }, msg.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-messages\",\n          children: \"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0439 \\u043F\\u043E\\u043A\\u0430 \\u043D\\u0435\\u0442.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        className: \"message-form mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary mt-2 w-100\",\n          children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger mt-2\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"aAeeR5oIlUizY1RH3hyGIHYlU7Q=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","ChatWindow","orderId","onClose","_s","messages","setMessages","newMessage","setNewMessage","loading","setLoading","error","setError","recipientId","setRecipientId","chatId","setChatId","userId","setUserId","token","localStorage","getItem","messagesEndRef","id","getUserIdFromToken","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","fetchChat","response","get","headers","Authorization","chatData","data","chat","fetchedMessages","length","firstIncoming","find","msg","sender_id","fallback","recipient","recipient_id","err","console","handleSendMessage","e","preventDefault","trim","post","content","newMsg","message","prev","payload","JSON","parse","atob","split","sub","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","_msg$sender","sender","name","ref","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/tolik/freelance-exchange/src/components/pages/Chat/ChatWindow.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./ChatWindow.css\";\r\n\r\nconst ChatWindow = ({ orderId, onClose }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [recipientId, setRecipientId] = useState(null);\r\n  const [chatId, setChatId] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // Получение userId из токена при первом рендере\r\n  useEffect(() => {\r\n    if (token) {\r\n      const id = getUserIdFromToken(token);\r\n      setUserId(id);\r\n    }\r\n  }, [token]);\r\n\r\n  // Прокрутка вниз при добавлении нового сообщения\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  // Получение чата при изменении orderId, token или userId\r\n  useEffect(() => {\r\n    const fetchChat = async () => {\r\n      setLoading(true);\r\n      setError(\"\");\r\n      try {\r\n        const response = await axios.get(\r\n          `http://127.0.0.1:8000/api/user/order/chat/${orderId}`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        const chatData = response.data.chat;\r\n        setChatId(chatData.id);\r\n\r\n        const fetchedMessages = chatData.messages || [];\r\n        setMessages(fetchedMessages);\r\n\r\n        // Определяем recipientId (получателя)\r\n        if (userId && fetchedMessages.length > 0) {\r\n          const firstIncoming = fetchedMessages.find(\r\n            (msg) => msg.sender_id !== userId\r\n          );\r\n\r\n          if (firstIncoming) {\r\n            setRecipientId(firstIncoming.sender_id);\r\n          } else {\r\n            const fallback = fetchedMessages[0];\r\n            const recipient =\r\n              fallback.sender_id === userId\r\n                ? fallback.recipient_id\r\n                : fallback.sender_id;\r\n            setRecipientId(recipient);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Ошибка при загрузке чата:\", err);\r\n        setError(\"Ошибка загрузки сообщений.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (orderId && token && userId) {\r\n      fetchChat();\r\n    }\r\n  }, [orderId, token, userId]);\r\n\r\n  // Автоматическая прокрутка вниз при изменении сообщений\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  // Отправка нового сообщения\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim()) return;\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `http://127.0.0.1:8000/api/user/order/chat/${orderId}/message`,\r\n        {\r\n          content: newMessage,\r\n          recipient_id: recipientId, // может быть null, сервер обработает\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      const newMsg = response.data.message;\r\n\r\n      // Если recipientId не установлен, определяем его по новому сообщению\r\n      if (!recipientId && userId) {\r\n        const recipient =\r\n          newMsg.sender_id === userId ? newMsg.recipient_id : newMsg.sender_id;\r\n        setRecipientId(recipient);\r\n      }\r\n\r\n      setMessages((prev) => [...prev, newMsg]);\r\n      setNewMessage(\"\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError(\"Ошибка при отправке сообщения.\");\r\n    }\r\n  };\r\n\r\n  // Декодирование токена для userId\r\n  function getUserIdFromToken(token) {\r\n    try {\r\n      const payload = JSON.parse(atob(token.split(\".\")[1]));\r\n      return payload.sub;\r\n    } catch (e) {\r\n      console.error(\"Ошибка при декодировании токена:\", e);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"chat-window\">\r\n      <div className=\"chat-header\">\r\n        <h5>Чат по заказу #{orderId}</h5>\r\n        <button className=\"btn btn-close\" onClick={onClose}></button>\r\n      </div>\r\n\r\n      <div className=\"chat-body\">\r\n        {loading ? (\r\n          <p>Загрузка...</p>\r\n        ) : (\r\n          <div className=\"chat-messages\">\r\n            {messages.length > 0 ? (\r\n              messages.map((msg) => (\r\n                <div\r\n                  key={msg.id}\r\n                  className={`message ${\r\n                    msg.sender_id === userId\r\n                      ? \"message-sent\"\r\n                      : \"message-received\"\r\n                  }`}\r\n                >\r\n                  <strong>\r\n                    {msg.sender?.name || `Пользователь #${msg.sender_id}`}:\r\n                  </strong>\r\n                  <p>{msg.content}</p>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div className=\"no-messages\">Сообщений пока нет.</div>\r\n            )}\r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n        )}\r\n\r\n        <form onSubmit={handleSendMessage} className=\"message-form mt-2\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={newMessage}\r\n            onChange={(e) => setNewMessage(e.target.value)}\r\n            placeholder=\"Введите сообщение...\"\r\n          />\r\n          <button type=\"submit\" className=\"btn btn-primary mt-2 w-100\">\r\n            Отправить\r\n          </button>\r\n        </form>\r\n\r\n        {error && <div className=\"alert alert-danger mt-2\">{error}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}