{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tolik\\\\freelance-exchange\\\\src\\\\components\\\\pages\\\\Chat\\\\ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useMemo } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst userColors = [\"#4a6fa5\", \"#a7c7e7\", \"#f4a261\", \"#e76f51\", \"#2a9d8f\", \"#264653\"];\nconst getUserColor = userId => {\n  if (!userId) return \"#ccc\";\n  const index = userId.toString().split(\"\").reduce((acc, char) => acc + char.charCodeAt(0), 0) % userColors.length;\n  return userColors[index];\n};\nconst ChatWindow = ({\n  orderId,\n  onClose\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [recipientId, setRecipientId] = useState(null);\n  const [chatId, setChatId] = useState(null);\n  const token = localStorage.getItem(\"token\");\n  const messagesEndRef = useRef(null);\n  const currentUserId = useMemo(() => {\n    if (!token) return null;\n    try {\n      const payload = JSON.parse(atob(token.split(\".\")[1]));\n      return payload.sub;\n    } catch {\n      return null;\n    }\n  }, [token]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    const fetchChat = async () => {\n      setLoading(true);\n      try {\n        const {\n          data\n        } = await axios.get(`http://127.0.0.1:8000/api/user/order/chat/${orderId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const chatData = data.chat;\n        setChatId(chatData.id);\n        const fetchedMessages = chatData.messages || [];\n        setMessages(fetchedMessages);\n        if (fetchedMessages.length > 0) {\n          const firstIncoming = fetchedMessages.find(msg => msg.sender_id !== currentUserId);\n          if (firstIncoming) {\n            setRecipientId(firstIncoming.sender_id);\n          } else {\n            const fallback = fetchedMessages[0];\n            const recipient = fallback.sender_id === currentUserId ? fallback.recipient_id : fallback.sender_id;\n            setRecipientId(recipient);\n          }\n        }\n      } catch {\n        setError(\"Ошибка загрузки сообщений.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (orderId && token) fetchChat();\n  }, [orderId, token, currentUserId]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    try {\n      const {\n        data\n      } = await axios.post(`http://127.0.0.1:8000/api/user/order/chat/${orderId}/message`, {\n        content: newMessage,\n        recipient_id: recipientId\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const newMsg = data.message;\n      if (!recipientId) {\n        const recipient = newMsg.sender_id === currentUserId ? newMsg.recipient_id : newMsg.sender_id;\n        setRecipientId(recipient);\n      }\n      setMessages(prev => [...prev, newMsg]);\n      setNewMessage(\"\");\n    } catch {\n      setError(\"Ошибка при отправке сообщения.\");\n    }\n  };\n\n  // Общие стили для контейнера и заголовка\n  const styles = {\n    chatWindow: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      height: 500,\n      width: 350,\n      border: \"1px solid #ddd\",\n      borderRadius: 8,\n      backgroundColor: \"#fff\",\n      fontFamily: \"Arial, sans-serif\"\n    },\n    chatHeader: {\n      padding: \"10px 15px\",\n      backgroundColor: \"#f8f9fa\",\n      borderBottom: \"1px solid #ddd\",\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\"\n    },\n    chatBody: {\n      flex: 1,\n      padding: \"10px 15px\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      overflowY: \"auto\",\n      backgroundColor: \"#fafafa\"\n    },\n    messageSent: {\n      backgroundColor: \"rgba(128,128,128,0.3)\",\n      color: \"#000\",\n      alignSelf: \"flex-start\",\n      borderRadius: 12,\n      padding: \"8px 12px\",\n      margin: \"5px 0\",\n      maxWidth: \"70%\",\n      wordBreak: \"break-word\",\n      boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\"\n    },\n    messageReceived: senderId => ({\n      backgroundColor: \"rgba(46,204,113,0.3)\",\n      color: \"#000\",\n      alignSelf: \"flex-end\",\n      borderRadius: 12,\n      padding: \"8px 12px\",\n      margin: \"5px 0\",\n      maxWidth: \"70%\",\n      wordBreak: \"break-word\",\n      boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\",\n      border: `2px solid ${getUserColor(senderId)}`\n    }),\n    timestamp: {\n      fontSize: \"0.7em\",\n      color: \"#555\",\n      display: \"block\",\n      marginTop: 3,\n      textAlign: \"right\"\n    },\n    noMessages: {\n      textAlign: \"center\",\n      color: \"#666\",\n      marginTop: 20\n    },\n    messageForm: {\n      padding: \"10px 15px\",\n      borderTop: \"1px solid #ddd\",\n      backgroundColor: \"#f8f9fa\"\n    },\n    input: {\n      width: \"100%\",\n      padding: 8,\n      boxSizing: \"border-box\"\n    },\n    button: {\n      marginTop: 8,\n      width: \"100%\",\n      padding: \"8px 12px\",\n      backgroundColor: \"#0d6efd\",\n      color: \"white\",\n      border: \"none\",\n      borderRadius: 4,\n      cursor: \"pointer\"\n    },\n    closeButton: {\n      background: \"none\",\n      border: \"none\",\n      fontSize: 20,\n      cursor: \"pointer\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.chatWindow,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.chatHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"\\u0427\\u0430\\u0442 \\u043F\\u043E \\u0437\\u0430\\u043A\\u0430\\u0437\\u0443 #\", orderId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        \"aria-label\": \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C \\u0447\\u0430\\u0442\",\n        style: styles.closeButton,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.chatBody,\n      children: [loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this) : messages.length > 0 ? messages.map(msg => {\n        var _msg$sender;\n        const isCurrentUser = msg.sender_id === currentUserId;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: isCurrentUser ? styles.messageSent : styles.messageReceived(msg.sender_id),\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [((_msg$sender = msg.sender) === null || _msg$sender === void 0 ? void 0 : _msg$sender.name) || `Пользователь #${msg.sender_id}`, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: msg.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, this), msg.created_at && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: styles.timestamp,\n            children: new Date(msg.created_at).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 19\n          }, this)]\n        }, msg.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.noMessages,\n        children: \"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0439 \\u043F\\u043E\\u043A\\u0430 \\u043D\\u0435\\u0442.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        style: styles.messageForm,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          style: styles.input,\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435...\",\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: styles.button,\n          children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\",\n          marginTop: 10\n        },\n        children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"94E3C6oBecg5ECJ6Kkcl/1XHEFk=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","axios","jsxDEV","_jsxDEV","userColors","getUserColor","userId","index","toString","split","reduce","acc","char","charCodeAt","length","ChatWindow","orderId","onClose","_s","messages","setMessages","newMessage","setNewMessage","loading","setLoading","error","setError","recipientId","setRecipientId","chatId","setChatId","token","localStorage","getItem","messagesEndRef","currentUserId","payload","JSON","parse","atob","sub","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","fetchChat","data","get","headers","Authorization","chatData","chat","id","fetchedMessages","firstIncoming","find","msg","sender_id","fallback","recipient","recipient_id","handleSendMessage","e","preventDefault","trim","post","content","newMsg","message","prev","styles","chatWindow","display","flexDirection","height","width","border","borderRadius","backgroundColor","fontFamily","chatHeader","padding","borderBottom","justifyContent","alignItems","chatBody","flex","overflowY","messageSent","color","alignSelf","margin","maxWidth","wordBreak","boxShadow","messageReceived","senderId","timestamp","fontSize","marginTop","textAlign","noMessages","messageForm","borderTop","input","boxSizing","button","cursor","closeButton","background","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","_msg$sender","isCurrentUser","sender","name","created_at","Date","toLocaleTimeString","onSubmit","type","value","onChange","target","placeholder","autoComplete","ref","_c","$RefreshReg$"],"sources":["C:/Users/tolik/freelance-exchange/src/components/pages/Chat/ChatWindow.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst userColors = [\r\n  \"#4a6fa5\",\r\n  \"#a7c7e7\",\r\n  \"#f4a261\",\r\n  \"#e76f51\",\r\n  \"#2a9d8f\",\r\n  \"#264653\",\r\n];\r\n\r\nconst getUserColor = (userId) => {\r\n  if (!userId) return \"#ccc\";\r\n  const index =\r\n    userId\r\n      .toString()\r\n      .split(\"\")\r\n      .reduce((acc, char) => acc + char.charCodeAt(0), 0) % userColors.length;\r\n  return userColors[index];\r\n};\r\n\r\nconst ChatWindow = ({ orderId, onClose }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [recipientId, setRecipientId] = useState(null);\r\n  const [chatId, setChatId] = useState(null);\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const currentUserId = useMemo(() => {\r\n    if (!token) return null;\r\n    try {\r\n      const payload = JSON.parse(atob(token.split(\".\")[1]));\r\n      return payload.sub;\r\n    } catch {\r\n      return null;\r\n    }\r\n  }, [token]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchChat = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const { data } = await axios.get(\r\n          `http://127.0.0.1:8000/api/user/order/chat/${orderId}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        );\r\n\r\n        const chatData = data.chat;\r\n        setChatId(chatData.id);\r\n\r\n        const fetchedMessages = chatData.messages || [];\r\n        setMessages(fetchedMessages);\r\n\r\n        if (fetchedMessages.length > 0) {\r\n          const firstIncoming = fetchedMessages.find(\r\n            (msg) => msg.sender_id !== currentUserId\r\n          );\r\n          if (firstIncoming) {\r\n            setRecipientId(firstIncoming.sender_id);\r\n          } else {\r\n            const fallback = fetchedMessages[0];\r\n            const recipient =\r\n              fallback.sender_id === currentUserId\r\n                ? fallback.recipient_id\r\n                : fallback.sender_id;\r\n            setRecipientId(recipient);\r\n          }\r\n        }\r\n      } catch {\r\n        setError(\"Ошибка загрузки сообщений.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (orderId && token) fetchChat();\r\n  }, [orderId, token, currentUserId]);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim()) return;\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        `http://127.0.0.1:8000/api/user/order/chat/${orderId}/message`,\r\n        { content: newMessage, recipient_id: recipientId },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n\r\n      const newMsg = data.message;\r\n\r\n      if (!recipientId) {\r\n        const recipient =\r\n          newMsg.sender_id === currentUserId\r\n            ? newMsg.recipient_id\r\n            : newMsg.sender_id;\r\n        setRecipientId(recipient);\r\n      }\r\n\r\n      setMessages((prev) => [...prev, newMsg]);\r\n      setNewMessage(\"\");\r\n    } catch {\r\n      setError(\"Ошибка при отправке сообщения.\");\r\n    }\r\n  };\r\n\r\n  // Общие стили для контейнера и заголовка\r\n  const styles = {\r\n    chatWindow: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      height: 500,\r\n      width: 350,\r\n      border: \"1px solid #ddd\",\r\n      borderRadius: 8,\r\n      backgroundColor: \"#fff\",\r\n      fontFamily: \"Arial, sans-serif\",\r\n    },\r\n    chatHeader: {\r\n      padding: \"10px 15px\",\r\n      backgroundColor: \"#f8f9fa\",\r\n      borderBottom: \"1px solid #ddd\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    chatBody: {\r\n      flex: 1,\r\n      padding: \"10px 15px\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      overflowY: \"auto\",\r\n      backgroundColor: \"#fafafa\",\r\n    },\r\n    messageSent: {\r\n      backgroundColor: \"rgba(128,128,128,0.3)\",\r\n      color: \"#000\",\r\n      alignSelf: \"flex-start\",\r\n      borderRadius: 12,\r\n      padding: \"8px 12px\",\r\n      margin: \"5px 0\",\r\n      maxWidth: \"70%\",\r\n      wordBreak: \"break-word\",\r\n      boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\",\r\n    },\r\n    messageReceived: (senderId) => ({\r\n      backgroundColor: \"rgba(46,204,113,0.3)\",\r\n      color: \"#000\",\r\n      alignSelf: \"flex-end\",\r\n      borderRadius: 12,\r\n      padding: \"8px 12px\",\r\n      margin: \"5px 0\",\r\n      maxWidth: \"70%\",\r\n      wordBreak: \"break-word\",\r\n      boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\",\r\n      border: `2px solid ${getUserColor(senderId)}`,\r\n    }),\r\n    timestamp: {\r\n      fontSize: \"0.7em\",\r\n      color: \"#555\",\r\n      display: \"block\",\r\n      marginTop: 3,\r\n      textAlign: \"right\",\r\n    },\r\n    noMessages: {\r\n      textAlign: \"center\",\r\n      color: \"#666\",\r\n      marginTop: 20,\r\n    },\r\n    messageForm: {\r\n      padding: \"10px 15px\",\r\n      borderTop: \"1px solid #ddd\",\r\n      backgroundColor: \"#f8f9fa\",\r\n    },\r\n    input: {\r\n      width: \"100%\",\r\n      padding: 8,\r\n      boxSizing: \"border-box\",\r\n    },\r\n    button: {\r\n      marginTop: 8,\r\n      width: \"100%\",\r\n      padding: \"8px 12px\",\r\n      backgroundColor: \"#0d6efd\",\r\n      color: \"white\",\r\n      border: \"none\",\r\n      borderRadius: 4,\r\n      cursor: \"pointer\",\r\n    },\r\n    closeButton: {\r\n      background: \"none\",\r\n      border: \"none\",\r\n      fontSize: 20,\r\n      cursor: \"pointer\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div style={styles.chatWindow}>\r\n      <div style={styles.chatHeader}>\r\n        <h5>Чат по заказу #{orderId}</h5>\r\n        <button onClick={onClose} aria-label=\"Закрыть чат\" style={styles.closeButton}>\r\n          ×\r\n        </button>\r\n      </div>\r\n\r\n      <div style={styles.chatBody}>\r\n        {loading ? (\r\n          <p>Загрузка...</p>\r\n        ) : messages.length > 0 ? (\r\n          messages.map((msg) => {\r\n            const isCurrentUser = msg.sender_id === currentUserId;\r\n            return (\r\n              <div\r\n                key={msg.id}\r\n                style={\r\n                  isCurrentUser\r\n                    ? styles.messageSent\r\n                    : styles.messageReceived(msg.sender_id)\r\n                }\r\n              >\r\n                <strong>\r\n                  {msg.sender?.name || `Пользователь #${msg.sender_id}`}:\r\n                </strong>\r\n                <p>{msg.content}</p>\r\n                {msg.created_at && (\r\n                  <span style={styles.timestamp}>\r\n                    {new Date(msg.created_at).toLocaleTimeString()}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <div style={styles.noMessages}>Сообщений пока нет.</div>\r\n        )}\r\n\r\n        <form onSubmit={handleSendMessage} style={styles.messageForm}>\r\n          <input\r\n            type=\"text\"\r\n            style={styles.input}\r\n            value={newMessage}\r\n            onChange={(e) => setNewMessage(e.target.value)}\r\n            placeholder=\"Введите сообщение...\"\r\n            autoComplete=\"off\"\r\n          />\r\n          <button type=\"submit\" style={styles.button}>\r\n            Отправить\r\n          </button>\r\n        </form>\r\n\r\n        {error && (\r\n          <div style={{ color: \"red\", marginTop: 10 }}>\r\n            Ошибка: {error}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div ref={messagesEndRef}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}