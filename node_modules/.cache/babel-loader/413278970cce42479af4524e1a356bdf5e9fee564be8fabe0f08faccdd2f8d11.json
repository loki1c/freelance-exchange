{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tolik\\\\freelance-exchange\\\\src\\\\components\\\\pages\\\\Chat\\\\ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport \"./ChatWindow.css\"; // подключи стили, если есть\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = ({\n  selectedOrderId\n}) => {\n  _s();\n  const [token, setToken] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  // Получение токена и userId один раз при монтировании\n  useEffect(() => {\n    const storedToken = localStorage.getItem(\"token\");\n    if (storedToken) {\n      setToken(storedToken);\n      try {\n        const decoded = jwt_decode(storedToken);\n        setUserId(decoded.sub); // Убедись, что userId хранится в поле `sub` (или замени на `decoded.id`, если нужно)\n        console.log(\"User ID from token:\", decoded.sub);\n      } catch (err) {\n        console.error(\"Ошибка при декодировании токена:\", err);\n      }\n    }\n  }, []);\n\n  // Загрузка сообщений\n  useEffect(() => {\n    if (token && selectedOrderId) {\n      axios.get(`http://localhost:8000/api/messages/${selectedOrderId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        setMessages(response.data);\n      }).catch(error => {\n        console.error(\"Ошибка при загрузке сообщений:\", error);\n      });\n    }\n  }, [token, selectedOrderId]);\n\n  // Отправка сообщения\n  const sendMessage = () => {\n    if (!newMessage.trim()) return;\n    axios.post(\"http://localhost:8000/api/messages\", {\n      order_id: selectedOrderId,\n      content: newMessage\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      setMessages([...messages, response.data]);\n      setNewMessage(\"\");\n    }).catch(error => {\n      console.error(\"Ошибка при отправке сообщения:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: messages.map(msg => {\n        var _msg$sender;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.sender_id === userId ? \"message-sent\" : \"message-received\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [((_msg$sender = msg.sender) === null || _msg$sender === void 0 ? void 0 : _msg$sender.name) || `Пользователь #${msg.sender_id}`, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: msg.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, msg.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435...\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"jfwA4I7QZf1OAG3ri05fDYwuDac=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useEffect","useState","axios","jwt_decode","jsxDEV","_jsxDEV","ChatWindow","selectedOrderId","_s","token","setToken","userId","setUserId","messages","setMessages","newMessage","setNewMessage","storedToken","localStorage","getItem","decoded","sub","console","log","err","error","get","headers","Authorization","then","response","data","catch","sendMessage","trim","post","order_id","content","className","children","map","msg","_msg$sender","sender_id","sender","name","fileName","_jsxFileName","lineNumber","columnNumber","id","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/tolik/freelance-exchange/src/components/pages/Chat/ChatWindow.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport \"./ChatWindow.css\"; // подключи стили, если есть\r\n\r\nconst ChatWindow = ({ selectedOrderId }) => {\r\n  const [token, setToken] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n\r\n  // Получение токена и userId один раз при монтировании\r\n  useEffect(() => {\r\n    const storedToken = localStorage.getItem(\"token\");\r\n    if (storedToken) {\r\n      setToken(storedToken);\r\n      try {\r\n        const decoded = jwt_decode(storedToken);\r\n        setUserId(decoded.sub); // Убедись, что userId хранится в поле `sub` (или замени на `decoded.id`, если нужно)\r\n        console.log(\"User ID from token:\", decoded.sub);\r\n      } catch (err) {\r\n        console.error(\"Ошибка при декодировании токена:\", err);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Загрузка сообщений\r\n  useEffect(() => {\r\n    if (token && selectedOrderId) {\r\n      axios\r\n        .get(`http://localhost:8000/api/messages/${selectedOrderId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          setMessages(response.data);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Ошибка при загрузке сообщений:\", error);\r\n        });\r\n    }\r\n  }, [token, selectedOrderId]);\r\n\r\n  // Отправка сообщения\r\n  const sendMessage = () => {\r\n    if (!newMessage.trim()) return;\r\n\r\n    axios\r\n      .post(\r\n        \"http://localhost:8000/api/messages\",\r\n        {\r\n          order_id: selectedOrderId,\r\n          content: newMessage,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        setMessages([...messages, response.data]);\r\n        setNewMessage(\"\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Ошибка при отправке сообщения:\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-window\">\r\n      <div className=\"messages-container\">\r\n        {messages.map((msg) => (\r\n          <div\r\n            key={msg.id}\r\n            className={`message ${\r\n              msg.sender_id === userId ? \"message-sent\" : \"message-received\"\r\n            }`}\r\n          >\r\n            <strong>\r\n              {msg.sender?.name || `Пользователь #${msg.sender_id}`}:\r\n            </strong>\r\n            <p>{msg.content}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Введите сообщение...\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n        />\r\n        <button onClick={sendMessage}>Отправить</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}